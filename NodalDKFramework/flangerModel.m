classdef flangerModel < DKmodel
    properties(Constant)
        components_def = [resistor('R1',[1,0],120000),...
            resistor('R2',[2,3],390000),...
            capacitor('C10',[19,0],5e-6),...
            %potmeter('P1',[17,5,18],10e3),... % potmeter not found
            inputPort('In',[1,0],0),...
            inputPort('InBBD',[15,0],0),...
            outputPort('Out',[14,0]),...
            outputPort('OutBBD',[8,0]),...
            opa('opa1',[3,5,4],1e8),...
            opa('opa1',[10,7,8],1e8),...
            opa('opa1',[12,19,14],1e8)];
        components_count = struct('numResistors'...
            , 15,'numCapacitors',...
            10,...
            'numInputPorts', 2, 'numOutputPorts', 2, ...
            'numNonlinearComponents',0, 'numPotmeters' ...
            , 1,...
            'numNodes', 19, 'numOPAs',3);
    end
    properties(Access = private)
        delay_line = zeros(2,1024);
        pointer = 1;
    end
    methods
        function obj = load_input(obj,in,channel)
            obj.U(1) = in;
            obj.U(2) = obj.delay_line(channel,obj.pointer);
        end
        function [out, obj] = store_output(obj,output,channel)
            out = output(1);
            obj.delay_line(channel, obj.pointer) = output(2);
            obj.pointer = obj.pointer+1;
            if(obj.pointer >= obj.current_delay)
                obj.pointer = 1;
            end
        end
    end
end