classdef preampModel < DKmodel
    
    properties(Constant)
        components_def = [resistor('R1',[2,3],68000),...
            	resistor('R2',[3,0],1000000),...
            	resistor('R3',[4,0],2700),...
            	resistor('R4',[5,6],100000),...
            	resistor('R5',[7,0],1000000),...
                capacitor('C1',[1,2],20e-9),...
                capacitor('C2',[4,0],680e-9),...
            	capacitor('C3',[5,7],20e-9),... 
                capacitor('C4',[3,5],3e-12),...       
            	inputPort('In',[1,0],0),...
            	inputPort('power',[6,0],300),...
            	outputPort('Out',[7,0]),...    
            	triode('v1',[3,4;5,4],0)];
            
            
            
            components_count = struct('numResistors', 5,'numCapacitors', 5,...
                'numInputPorts', 2, 'numOutputPorts', 1,...
                'numNonlinearComponents',2, 'numPotmeters', 0,...
                'numNodes', 7, 'numOPAs', 0);
    end
    
    properties
        nonlin_model;
    end
    
    methods
        function obj = preampModel(fs)
           obj.T = 1/fs;
           obj.nonlin_model = obj.components_def(13).model;
           obj = buildModel(obj, obj.components_def,obj.components_count);
        end
 
        function obj = load_input(obj,in)        
               obj.U(1) = in; % loads the input signal sample given by in into inputs vector U
           end
                  
        function [i, J] = nonlinearity(obj,v)
            %[i,J] = obj.nonlin_model(v);
            [i, J] = ecc83_tube_model(v);
        end     
  
    end
end